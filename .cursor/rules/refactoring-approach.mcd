Подход к рефакторингу
– Применять минимальные изменения, разбивая крупные задачи рефакторинга на микро-шаги
– Запускать тесты после каждого шага; создавать базовые тесты, если их нет
– Проверять результаты, сравнивая поведение до и после с идентичными входными данными
– Фокусироваться на одном модуле за раз для сохранения изоляции и предотвращения непреднамеренных эффектов
– Документировать все изменения с четкими объяснениями того, что было изменено и почему
– Строго сохранять существующую функциональность - любое изменение логики считается ошибкой
– Выполнять A/B тестирование для проверки стабильности после рефакторинга
– Не упрощать и не оптимизировать код без явного одобрения
– Никогда не делать предположений о предполагаемой функциональности; запрашивать подтверждение в случае неопределенности
– После разбиения больших файлов на меньшие СНАЧАЛА ПРОВЕРЯТЬ ИМПОРТЫ, затем либо:
ПОЛНОСТЬЮ УДАЛИТЬ старый большой файл, если никакой другой код от него не зависит
либо ЗАМЕНИТЬ его небольшим "файлом-мостом", который реэкспортирует из новой структуры, если импорты существуют